{"ast":null,"code":"import Vue from 'vue';\nimport App from './App.vue';\nimport VueRouter from 'vue-router';\nimport axios from 'axios';\n\n// Vue.prototype.$http = axios;\nVue.use(VueRouter);\n// Vue.config.productionTip = false\n\nconst routes = [{\n  path: '/',\n  name: 'App',\n  component: App\n}];\nconst router = new VueRouter({\n  routes // (缩写) 相当于 routes: routes\n});\n\nrouter.beforeEach((to, from, next) => {\n  if (to.path === '/login') {\n    let token = window.sessionStorage.getItem(\"token\") ? window.sessionStorage.getItem(\"token\") : null;\n    // next();\n  } else {\n    let token = window.sessionStorage.getItem(\"token\") ? window.sessionStorage.getItem(\"token\") : null;\n    if (token === null || token === '') {\n      next('/login');\n    } else {\n      next();\n    }\n  }\n});\n\n// axios.defaults.baseURL = \"http://localhost:8080/\"\n//添加请求拦截器\naxios.interceptors.request.use(config => {\n  if (window.sessionStorage.getItem(\"CCNtoken\") != null) {\n    config.headers.common['token'] = window.sessionStorage.getItem(\"CCNtoken\");\n  }\n  return config;\n}, error => {\n  //对请求错误做什么\n  return Promise.reject(error);\n});\nnew Vue({\n  render: h => h(App)\n}).$mount('#app');","map":{"version":3,"names":["Vue","App","VueRouter","axios","use","routes","path","name","component","router","beforeEach","to","from","next","token","window","sessionStorage","getItem","interceptors","request","config","headers","common","error","Promise","reject","render","h","$mount"],"sources":["E:/ST/html/vue/gitccn/src/main.js"],"sourcesContent":["import Vue from 'vue'\nimport App from './App.vue'\nimport VueRouter from 'vue-router';\nimport axios from 'axios'\n\n// Vue.prototype.$http = axios;\nVue.use(VueRouter);\n// Vue.config.productionTip = false\n\nconst routes = [\n  {\n    path: '/',\n    name: 'App',\n    component: App\n  },\n];\n\nconst router = new VueRouter({\n  routes // (缩写) 相当于 routes: routes\n})\n\nrouter.beforeEach((to, from, next) => {\n  \n  if (to.path === '/login') {\n    let token = window.sessionStorage.getItem(\"token\")?window.sessionStorage.getItem(\"token\"):null\n    // next();\n  } else {\n    let token = window.sessionStorage.getItem(\"token\")?window.sessionStorage.getItem(\"token\"):null\n \n    if (token === null || token === '') {\n      next('/login');\n    } else {\n      next();\n    }\n  }\n})\n\n// axios.defaults.baseURL = \"http://localhost:8080/\"\n//添加请求拦截器\naxios.interceptors.request.use(\n  config =>{\n    if(window.sessionStorage.getItem(\"CCNtoken\")!=null){\n      config.headers.common['token'] =window.sessionStorage.getItem(\"CCNtoken\")\n    }\n    return config;\n  },\n  error =>{\n    //对请求错误做什么\n    return Promise.reject(error);\n  })\n\nnew Vue({\n  render: h => h(App),\n  \n}).$mount('#app')\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACAH,GAAG,CAACI,GAAG,CAACF,SAAS,CAAC;AAClB;;AAEA,MAAMG,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,KAAK;EACXC,SAAS,EAAEP;AACb,CAAC,CACF;AAED,MAAMQ,MAAM,GAAG,IAAIP,SAAS,CAAC;EAC3BG,MAAM,CAAC;AACT,CAAC,CAAC;;AAEFI,MAAM,CAACC,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAEpC,IAAIF,EAAE,CAACL,IAAI,KAAK,QAAQ,EAAE;IACxB,IAAIQ,KAAK,GAAGC,MAAM,CAACC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC,GAACF,MAAM,CAACC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC,GAAC,IAAI;IAC9F;EACF,CAAC,MAAM;IACL,IAAIH,KAAK,GAAGC,MAAM,CAACC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC,GAACF,MAAM,CAACC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC,GAAC,IAAI;IAE9F,IAAIH,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,EAAE,EAAE;MAClCD,IAAI,CAAC,QAAQ,CAAC;IAChB,CAAC,MAAM;MACLA,IAAI,CAAC,CAAC;IACR;EACF;AACF,CAAC,CAAC;;AAEF;AACA;AACAV,KAAK,CAACe,YAAY,CAACC,OAAO,CAACf,GAAG,CAC5BgB,MAAM,IAAG;EACP,IAAGL,MAAM,CAACC,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC,IAAE,IAAI,EAAC;IACjDG,MAAM,CAACC,OAAO,CAACC,MAAM,CAAC,OAAO,CAAC,GAAEP,MAAM,CAACC,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC;EAC3E;EACA,OAAOG,MAAM;AACf,CAAC,EACDG,KAAK,IAAG;EACN;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CAAC;AAEJ,IAAIvB,GAAG,CAAC;EACN0B,MAAM,EAAEC,CAAC,IAAIA,CAAC,CAAC1B,GAAG;AAEpB,CAAC,CAAC,CAAC2B,MAAM,CAAC,MAAM,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}