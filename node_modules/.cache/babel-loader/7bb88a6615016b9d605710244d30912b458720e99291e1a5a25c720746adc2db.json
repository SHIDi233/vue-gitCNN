{"ast":null,"code":"export default {\n  data: {\n    //message: 'Hello Vue.js!'\n  },\n  methods: {\n    getValue: function () {\n      // 获取message变量值将其转换成数组，逆转后再链接，再赋值给message\n      alert(\"登录\");\n      var a = jQuery(\"#account\").val();\n      var p = jQuery(\"#pwd\").val();\n      // 发送AJAX POST请求\n      // 1. 创建AJAX核心对象\n      var xhr = new XMLHttpRequest();\n      // 2. 注册回调函数\n      xhr.onreadystatechange = function () {\n        if (this.readyState == 4) {\n          if (this.status == 200) {\n            var res = xhr.responseText;\n            var obj = JSON.parse(res);\n            if (obj.code == 1) {\n              window.sessionStorage.setItem(\"CCNtoken\", obj.data);\n              alert(window.sessionStorage.getItem(\"CCNtoken\"));\n              window.location.href = \"../\";\n              //\t\t\t\t\t\t\tvar result=\"\";\n              //\t\t\t\t\t\t\tjQuery.ajax({\n              //\t\t\t\t\t\t\t\t\"type\":\"get\",\n              //\t\t\t\t\t\t\t\t\"url\":\"../index\",\n              //\t\t\t\t\t\t\t\theaders: {\n              //        \t\t\t\t\t\t\ttoken:  window.sessionStorage.getItem(\"CCNtoken\")\n              //    \t\t\t\t\t\t\t},\n              //\t\t\t\t\t\t\t\t\"success\":function(rel){\n              ////\t\t\t\t\t\t\t\t\tvar newPage = window.open(\"about:blank\", \"_blank\");\n              ////            \t\t\t\t\t\t//将后台传过来的html页面写到新打开的浏览器窗口中显示\n              ////            \t\t\t\t\t\tnewPage.document.write(rel.data);\n              ////\t\t\t\t\t\t\t\t\t$(\"html\").html($(\"html\", rel).html());\n              //\t\t\t\t\t\t\t\t\tvar content = rel.responseText;\n              //\t\t\t\t\t\t\t\t\tvar data = new Blob([content],{type:\"text/html\"});\n              //                    \t\t\t\tvar downloadUrl = window.URL.createObjectURL(data);\n              //                    \t\t\t\tvar anchor = document.createElement(\"a\");\n              //                    \t\t\t\tanchor.href = downloadUrl;\n              //\t\t\t\t\t\t\t\t\tanchor.click();\n              //\n              //\t\t\t\t\t\t\t\t}\n              //\t\t\t\t\t\t\t});\n            } else {\n              alert(\"false\");\n            }\n          } else {\n            alert(this.status);\n          }\n        }\n      };\n      // 3. 开启通道\n      xhr.open(\"POST\", \"/login\", true);\n      xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n      xhr.send(\"mail=\" + a + \"&password=\" + p);\n      // 4. 发送请求\n      xhr.send();\n    },\n    register: function () {\n      // 获取message变量值将其转换成数组，逆转后再链接，再赋值给message\n      alert(\"注册\");\n    }\n  }\n};","map":{"version":3,"names":["data","methods","getValue","alert","a","jQuery","val","p","xhr","XMLHttpRequest","onreadystatechange","readyState","status","res","responseText","obj","JSON","parse","code","window","sessionStorage","setItem","getItem","location","href","open","setRequestHeader","send","register"],"sources":["src/components/LoginPage.vue"],"sourcesContent":["<style src=\"./css/login.css\"></style>\r\n<script src = \"./js/login.js\"></script>\r\n<template>\r\n      <div class=\"login\">\r\n          <div class=\"box\">\r\n              <p class=\"table\">Git CCN</p>\r\n              <br>\r\n              <input id=\"account\" type=\"text\" placeholder=\"账号\" value=\"\" >\r\n              <input id=\"pwd\" type=\"password\" placeholder=\"密码\" value=\"\" >\r\n              \r\n              <a href=\"#\" class=\"go\" v-on:click=\"getValue\">登录</a>\r\n              <a href=\"#\" class=\"go\" v-on:click=\"register\">注册</a>\r\n              <br>\r\n          </div>\r\n      </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        data: {\r\n            //message: 'Hello Vue.js!'\r\n        },\r\n        methods: {\r\n            getValue: function () {\r\n                // 获取message变量值将其转换成数组，逆转后再链接，再赋值给message\r\n                alert(\"登录\");\r\n                var a = jQuery(\"#account\").val();\r\n\tvar p = jQuery(\"#pwd\").val();\r\n\t// 发送AJAX POST请求\r\n\t// 1. 创建AJAX核心对象\r\n\tvar xhr = new XMLHttpRequest();\r\n\t// 2. 注册回调函数\r\n\txhr.onreadystatechange = function (){\r\n\t\tif (this.readyState == 4) {\r\n\t\t\tif (this.status == 200) {\r\n\t\t\t\tvar res = xhr.responseText;\r\n\t\t\t\tvar obj = JSON.parse(res);\r\n\t\t\t\tif(obj.code==1){\r\n\t\t\t\t\twindow.sessionStorage.setItem(\"CCNtoken\",obj.data);\r\n\t\t\t\t\talert(window.sessionStorage.getItem(\"CCNtoken\"));\r\n\t\t\t\t\twindow.location.href=\"../\";\r\n//\t\t\t\t\t\t\tvar result=\"\";\r\n//\t\t\t\t\t\t\tjQuery.ajax({\r\n//\t\t\t\t\t\t\t\t\"type\":\"get\",\r\n//\t\t\t\t\t\t\t\t\"url\":\"../index\",\r\n//\t\t\t\t\t\t\t\theaders: {\r\n//        \t\t\t\t\t\t\ttoken:  window.sessionStorage.getItem(\"CCNtoken\")\r\n//    \t\t\t\t\t\t\t},\r\n//\t\t\t\t\t\t\t\t\"success\":function(rel){\r\n////\t\t\t\t\t\t\t\t\tvar newPage = window.open(\"about:blank\", \"_blank\");\r\n////            \t\t\t\t\t\t//将后台传过来的html页面写到新打开的浏览器窗口中显示\r\n////            \t\t\t\t\t\tnewPage.document.write(rel.data);\r\n////\t\t\t\t\t\t\t\t\t$(\"html\").html($(\"html\", rel).html());\r\n//\t\t\t\t\t\t\t\t\tvar content = rel.responseText;\r\n//\t\t\t\t\t\t\t\t\tvar data = new Blob([content],{type:\"text/html\"});\r\n//                    \t\t\t\tvar downloadUrl = window.URL.createObjectURL(data);\r\n//                    \t\t\t\tvar anchor = document.createElement(\"a\");\r\n//                    \t\t\t\tanchor.href = downloadUrl;\r\n//\t\t\t\t\t\t\t\t\tanchor.click();\r\n//\r\n//\t\t\t\t\t\t\t\t}\r\n//\t\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\talert(\"false\");\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\talert(this.status);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// 3. 开启通道\r\n\txhr.open(\"POST\", \"/login\", true)\r\n\t xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\")\r\n\txhr.send(\"mail=\"+a+\"&password=\"+p)\r\n\t// 4. 发送请求\r\n\txhr.send()\r\n\r\n            },\r\n            register: function () {\r\n                // 获取message变量值将其转换成数组，逆转后再链接，再赋值给message\r\n                alert(\"注册\");\r\n            }\r\n        }\r\n        \r\n    }\r\n</script>\r\n"],"mappings":"AAkBA;EACAA,IAAA;IACA;EAAA,CACA;EACAC,OAAA;IACAC,QAAA,WAAAA,CAAA;MACA;MACAC,KAAA;MACA,IAAAC,CAAA,GAAAC,MAAA,aAAAC,GAAA;MACA,IAAAC,CAAA,GAAAF,MAAA,SAAAC,GAAA;MACA;MACA;MACA,IAAAE,GAAA,OAAAC,cAAA;MACA;MACAD,GAAA,CAAAE,kBAAA;QACA,SAAAC,UAAA;UACA,SAAAC,MAAA;YACA,IAAAC,GAAA,GAAAL,GAAA,CAAAM,YAAA;YACA,IAAAC,GAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAJ,GAAA;YACA,IAAAE,GAAA,CAAAG,IAAA;cACAC,MAAA,CAAAC,cAAA,CAAAC,OAAA,aAAAN,GAAA,CAAAf,IAAA;cACAG,KAAA,CAAAgB,MAAA,CAAAC,cAAA,CAAAE,OAAA;cACAH,MAAA,CAAAI,QAAA,CAAAC,IAAA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;;cAEA;cACA;YACA,OACA;cACArB,KAAA;YACA;UACA;YACAA,KAAA,MAAAS,MAAA;UACA;QACA;MACA;MACA;MACAJ,GAAA,CAAAiB,IAAA;MACAjB,GAAA,CAAAkB,gBAAA;MACAlB,GAAA,CAAAmB,IAAA,WAAAvB,CAAA,kBAAAG,CAAA;MACA;MACAC,GAAA,CAAAmB,IAAA;IAEA;IACAC,QAAA,WAAAA,CAAA;MACA;MACAzB,KAAA;IACA;EACA;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}